import numpy as np
import random
import copy
import math
import cv2

#一维分解过程
def one_dimension_decomposition(signal,N):
    n=int(math.log(len(signal),2))
    m=n
    signal_copy=copy.copy(signal)
    while n>m-N:
        for j in range(0,2**(n-1)):
            signal[j]=(signal[2*j]+signal[2*j+1])/2
        for k in range(0,2**(n-1)):
            signal[2**(n-1)+k]=(signal_copy[2*k]-signal_copy[2*k+1])/2
        signal_copy=copy.copy(signal)
        n-=1
    # print('haar小波变换后的结果=',signal)
    return signal

#分解过程
def decomposition(img,k,N):
    m,n=img.shape[0],img.shape[1]
    q,r= int(math.log(m, 2)), int(math.log(n, 2))
    for i in range(int(m)):  #进行行变换
        img[i,:]=one_dimension_decomposition(img[i,:],N)
    print('行分解结果',img)
    print('\n')
    for j in range(int(n)):   #进行列变换
        img[:,j]=one_dimension_decomposition(img[:,j],N)    #
    print('列分解结果',img)
    print('\n')
    return img


#主函数
if __name__=='__main__':
    filepath=r'woman-1.jpg'
    img=cv2.imread(filepath)
    img=cv2.resize(img,(512,512))    #此时输入图像大小是512x512
    img=cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)   #图像由rgb变为灰度图
    img=img.astype(np.float)        #将像素由无符号类型转为float方面后面的系数矩阵变换
    # img=np.sqrt(img)                 #归一化去掉光照对图像的影响
    print('分解之前的结果',img)
    img_coefficient =decomposition(img,0,1)
    print('分解一次后的结果',img_coefficient)
    cv2.imshow('img_coefficient',img_coefficient)
    cv2.waitKey(0)